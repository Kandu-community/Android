package com.inomma.kandu.model;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONException;
import org.json.JSONObject;

import com.google.android.gms.maps.model.LatLng;

public class FormSubmission {

	private JSONObject submissionJson;
	private UserForm form;
	private boolean isSubmitted = true;

	private SmallFormSubmission smallFormSubmission;

	private Map<String, SmallFormSubmission> inlineFormsSmallFormSubmissions = new HashMap<String, SmallFormSubmission>();

	
	public FormSubmission(UserForm form, JSONObject submissionJson) throws JSONException {
		this.form = form;
		this.submissionJson = submissionJson;
		this.setSmallFormSubmission(new SmallFormSubmission(submissionJson,
				this.form));
		for (UserForm inline : this.form.getInlineForms()) {
			SmallFormSubmission inlineFormSubmission = new SmallFormSubmission(
					this.submissionJson.getJSONObject(inline.getKey()), inline);
			inlineFormsSmallFormSubmissions.put(inline.getKey(), inlineFormSubmission);
		}
	}

	public UserForm getForm() {
		return form;
	}

	public void setForm(UserForm form) {
		this.form = form;
	}

	public JSONObject getSubmissionJson() {
		return submissionJson;
	}

	public void setSubmissionJson(JSONObject submissionJson) {
		this.submissionJson = submissionJson;
	}

	@Override
	public String toString() {
		String ret = "";
		if (form == null) {
			return super.toString();
		}
		for (String string : form.getForm().getLabelFields()) {
			try {
				ret += submissionJson.getString(string) + ",";
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
		if (!isSubmitted) {
			ret = "NOT SUBMITTED: " + ret;
		}
		return ret;
	}

	public LatLng getCoordinates() {
		try {
			String coords = submissionJson
					.getString(form.getGpsItem().getKey());
			coords = coords.replaceAll("(\\[|\\])", "");
			Double lat = Double.valueOf(coords.split(",")[0]);
			Double lng = Double.valueOf(coords.split(",")[1]);
			return new LatLng(lat, lng);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	public int getId() {
		try {
			return submissionJson.getInt("id");
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return -1;
	}

	public boolean isSubmitted() {
		return isSubmitted;
	}

	public void setSubmitted(boolean isSubmitted) {
		this.isSubmitted = isSubmitted;
	}

	public SmallFormSubmission getSmallFormSubmission() {
		return smallFormSubmission;
	}

	public void setSmallFormSubmission(SmallFormSubmission smallFormSubmission) {
		this.smallFormSubmission = smallFormSubmission;
	}

}
